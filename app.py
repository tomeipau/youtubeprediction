# -*- coding: utf-8 -*-
#"""Deployment Youtube Prediction.ipynb

#Automatically generated by Colab.

#Original file is located at
#    https://colab.research.google.com/drive/1d1tcu3I_Aq6sp_f4j4s-ot6pXLk1fhPr
#"""

import streamlit as st
from googleapiclient.discovery import build

# --- CONFIG ---
YOUTUBE_API_KEY = "AIzaSyBQAjxgoJb8COazwkvElzi4bZLujsIZ3xE"

# --- FUNCTIONS ---
def get_video_stats(video_url):
    try:
        # Extract Video ID from URL
        video_id = video_url.split("v=")[-1].split("&")[0]

        # Connect to API
        youtube = build("youtube", "v3", developerKey=YOUTUBE_API_KEY)
        request = youtube.videos().list(part="statistics,snippet", id=video_id)
        response = request.execute()

        if not response["items"]:
            return None, None

        stats = response["items"][0]["statistics"]
        title = response["items"][0]["snippet"]["title"]

        # Dummy prediction (replace later with BigQuery ML)
        predicted_views = int(stats.get("viewCount", 0)) * 1.05
        predicted_likes = int(stats.get("likeCount", 0)) * 1.10

        return title, {"views": round(predicted_views), "likes": round(predicted_likes)}

    except Exception as e:
        return None, None

# --- STREAMLIT UI ---
st.title("YouTube Video Performance Predictor")
video_url = st.text_input("Enter YouTube Video URL")

if st.button("Predict"):
    title, prediction = get_video_stats(video_url)
    if prediction:
        st.success(f"**Video Title:** {title}")
        st.write(f"Predicted Views: {prediction['views']}")
        st.write(f"Predicted Likes: {prediction['likes']}")
    else:
        st.error("Could not fetch video data. Please check the URL.")
